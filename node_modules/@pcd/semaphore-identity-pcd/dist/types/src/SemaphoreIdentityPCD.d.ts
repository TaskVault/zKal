import { PCD } from "@pcd/pcd-types";
import { Identity } from "@semaphore-protocol/identity";
export declare const SemaphoreIdentityPCDTypeName = "semaphore-identity-pcd";
export type SemaphoreIdentityPCDArgs = {
    identity: Identity;
};
export interface SemaphoreIdentityPCDClaim {
    identity: Identity;
}
export type SemaphoreIdentityPCDProof = undefined;
export declare function isSemaphoreIdentityPCD(pcd: PCD): pcd is SemaphoreIdentityPCD;
export declare class SemaphoreIdentityPCD implements PCD<SemaphoreIdentityPCDClaim, SemaphoreIdentityPCDProof> {
    type: string;
    claim: SemaphoreIdentityPCDClaim;
    proof: SemaphoreIdentityPCDProof;
    id: string;
    constructor(id: string, claim: SemaphoreIdentityPCDClaim);
}
//# sourceMappingURL=SemaphoreIdentityPCD.d.ts.map